[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Both TestNG and JUnit 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-surefire-plugin:2.12.4:help (default-cli) @ both ---
[INFO] Maven Surefire Plugin 2.12.4
  Surefire is a test framework project.

This plugin has 2 goals:

surefire:help
  Display help information on maven-surefire-plugin.
  Call mvn surefire:help -Ddetail=true -Dgoal=<goal-name> to display parameter
  details.

  Available parameters:

    detail (Default: false)
      If true, display all settable properties for each goal.

    goal (Default: null)
      The name of the goal for which to show help. If unspecified, all goals
      will be displayed.

    indentSize (Default: 2)
      The number of spaces per indentation level, should be positive.

    lineLength (Default: 80)
      The maximum length of a display line, should be positive.

surefire:test
  Run tests using Surefire.

  Available parameters:

    additionalClasspathElements
      Additional elements to be appended to the classpath.

    argLine (Default: null)
      Arbitrary JVM options to set on the command line.

    basedir
      The base directory of the project being tested. This can be obtained in
      your integration test via System.getProperty('basedir').

    childDelegation (Default: false)
      When false it makes tests run using the standard classloader delegation
      instead of the default Maven isolated classloader. Only used when forking
      (forkMode is not 'none').
      Setting it to false helps with some problems caused by conflicts between
      xml parsers in the classpath and the Java 5 provider parser.

    classesDirectory
      The directory containing generated classes of the project being tested.
      This will be included after the test classes in the test classpath.

    classpathDependencyExcludes
      List of dependencies to exclude from the test classpath. Each dependency
      string must follow the format groupId:artifactId. For example:
      org.acme:project-a

    classpathDependencyScopeExclude
      A dependency scope to exclude from the test classpath. The scope should be
      one of the scopes defined by org.apache.maven.artifact.Artifact. This
      includes the following:
      - compile - system, provided, compile
      - runtime - compile, runtime
      - compile+runtime - system, provided, compile, runtime
      - runtime+system - system, compile, runtime
      - test - system, provided, compile, runtime, test

    debugForkedProcess (Default: null)
      Attach a debugger to the forked JVM. If set to 'true', the process will
      suspend and wait for a debugger to attach on port 5005. If set to some
      other string, that string will be appended to the argLine, allowing you to
      configure arbitrary debuggability options (without overwriting the other
      options specified through the argLine parameter).

    disableXmlReport (Default: false)
      Flag to disable the generation of report files in xml format.

    enableAssertions (Default: true)
      By default, Surefire enables JVM assertions for the execution of your test
      cases. To disable the assertions, set this flag to 'false'.

    environmentVariables
      Additional environment variables to set on the command line.

    excludedGroups (Default: null)
      (TestNG/JUnit47 provider with JUnit4.8+ only) Excluded groups. Any
      methods/classes/etc with one of the groups specified in this list will
      specifically not be run.
      For JUnit, this parameter forces the use of the 4.7 provider
      This parameter is ignored if the suiteXmlFiles parameter is specified.

    excludes
      A list of <exclude> elements specifying the tests (by pattern) that should
      be excluded in testing. When not specified and when the test parameter is
      not specified, the default excludes will be
      <excludes>
       <exclude>**/*$*</exclude>
      </excludes>
      (which excludes all inner classes).
      This parameter is ignored if the TestNG suiteXmlFiles parameter is
      specified. Each exclude item may also contain a comma-separated sublist of
      items, which will be treated as multiple  <exclude> entries.

    failIfNoSpecifiedTests (Default: null)
      Set this to 'true' to cause a failure if the none of the tests specified
      in -Dtest=... are run. Defaults to 'true'.

    failIfNoTests (Default: null)
      Set this to 'true' to cause a failure if there are no tests to run.
      Defaults to 'false'.

    forkedProcessTimeoutInSeconds (Default: null)
      Kill the forked test process after a certain number of seconds. If set to
      0, wait forever for the process, never timing out.

    forkMode (Default: once)
      Option to specify the forking mode. Can be 'never', 'once', 'always' or
      'perthread'. 'none' and 'pertest' are also accepted for backwards
      compatibility. 'always' forks for each test-class. 'perthread' will create
      'threadCount' parallel forks.

    groups (Default: null)
      (TestNG/JUnit47 provider with JUnit4.8+ only) Groups for this test. Only
      classes/methods/etc decorated with one of the groups specified here will
      be included in test run, if specified.
      For JUnit, this parameter forces the use of the 4.7 provider
      This parameter is ignored if the suiteXmlFiles parameter is specified.

    includes
      A list of <include> elements specifying the tests (by pattern) that should
      be included in testing. When not specified and when the test parameter is
      not specified, the default includes will be
      <includes>
       <include>**/IT*.java</include>
       <include>**/*IT.java</include>
       <include>**/*ITCase.java</include>
      </includes>
      Each include item may also contain a comma-separated sublist of items,
      which will be treated as multiple  <include> entries.
      This parameter is ignored if the TestNG suiteXmlFiles parameter is
      specified.

    junitArtifactName (Default: junit:junit)
      Allows you to specify the name of the JUnit artifact. If not set,
      junit:junit will be used.

    jvm (Default: null)
      Option to specify the jvm (or path to the java executable) to use with the
      forking options. For the default, the jvm will be a new instance of the
      same VM as the one used to run Maven. JVM settings are not inherited from
      MAVEN_OPTS.

    objectFactory (Default: null)
      (TestNG only) Define the factory class used to create all test instances.

    parallel (Default: null)
      (TestNG only) When you use the parallel attribute, TestNG will try to run
      all your test methods in separate threads, except for methods that depend
      on each other, which will be run in the same thread in order to respect
      their order of execution. (JUnit 4.7 provider) Supports values
      'classes'/'methods'/'both' to run in separate threads, as controlled by
      threadCount.

    perCoreThreadCount (Default: true)
      (JUnit 4.7 provider) Indicates that threadCount is per cpu core.

    printSummary (Default: true)
      Option to print summary of test suites or just print the test cases that
      have errors.

    properties
      List of properties for configuring all TestNG related configurations. This
      is the new preferred method of configuring TestNG.

    redirectTestOutputToFile (Default: false)
      Set this to 'true' to redirect the unit test standard output to a file
      (found in reportsDirectory/testName-output.txt).

    remoteRepositories
      The remote plugin repositories declared in the POM.

    reportFormat (Default: brief)
      Selects the formatting for the test report to be generated. Can be set as
      'brief' or 'plain'.

    reportNameSuffix (Default: )
      Add custom text into report filename:
      TEST-testClassName-reportNameSuffix.xml,
      testClassName-reportNameSuffix.txt and
      testClassName-reportNameSuffix-output.txt. File
      TEST-testClassName-reportNameSuffix.xml has changed attributes
      'testsuite'--'name' and 'testcase'--'classname' - reportNameSuffix is
      added to the attribute value.

    reportsDirectory
      Base directory where all reports are written to.

    runOrder
      Defines the order the tests will be run in. Supported values are
      'alphabetical', 'reversealphabetical', 'random', 'hourly' (alphabetical on
      even hours, reverse alphabetical on odd hours), 'failedfirst', 'balanced'
      and 'filesystem'. Odd/Even for hourly is determined at the time the of
      scanning the classpath, meaning it could change during a multi-module
      build. Failed first will run tests that failed on previous run first, as
      well as new tests for this run. Balanced is only relevant with
      parallel=classes, and will try to optimize the run-order of the tests to
      make all tests complete at the same time, reducing the overall execution
      time. Note that the statistics are stored in a file named
      .surefire-XXXXXXXXX beside pom.xml, and should not be checked into version
      control. The 'XXXXX' is the SHA1 checksum of the entire surefire
      configuration, so different configurations will have different statistics
      files, meaning if you change any config settings you will re-run once
      before new statistics data can be established.

    skip (Default: false)
      Set this to 'true' to bypass unit tests entirely. Its use is NOT
      RECOMMENDED, especially if you enable it using the 'maven.test.skip'
      property, because maven.test.skip disables both running the tests and
      compiling the tests. Consider using the skipTests parameter instead.

    skipExec (Default: null)
      Deprecated. Use skipTests instead.

      This old parameter is just like skipTests, but bound to the old property
      'maven.test.skip.exec'.

    skipTests (Default: false)
      Set this to 'true' to skip running tests, but still compile them. Its use
      is NOT RECOMMENDED, but quite convenient on occasion.

    suiteXmlFiles
      (TestNG) List of <suiteXmlFile> elements specifying TestNG suite xml file
      locations. Note that suiteXmlFiles is incompatible with several other
      parameters of this plugin, like includes/excludes.
      This parameter is ignored if the test parameter is specified (allowing you
      to run a single test instead of an entire suite).

    systemProperties
      Deprecated. Use systemPropertyVariables instead.

      List of System properties to pass to the JUnit tests.

    systemPropertiesFile
      List of System properties, loaded from a file, to pass to the JUnit tests.

    systemPropertyVariables
      List of System properties to pass to the JUnit tests.

    test (Default: null)
      Specify this parameter to run individual tests by file name, overriding
      the includes/excludes parameters. Each pattern you specify here will be
      used to create an include pattern formatted like **/${test}.java, so you
      can just type '-Dtest=MyTest' to run a single test called
      'foo/MyTest.java'.
      This parameter overrides the includes/excludes parameters, and the TestNG
      suiteXmlFiles parameter. Since 2.7.3, you can execute a limited number of
      methods in the test by adding #myMethod or #my*ethod. For example,
      '-Dtest=MyTest#myMethod'. This is supported for junit 4.x and testNg.

    testClassesDirectory
      The directory containing generated test classes of the project being
      tested. This will be included at the beginning of the test classpath. *

    testFailureIgnore (Default: false)
      Set this to 'true' to ignore a failure during testing. Its use is NOT
      RECOMMENDED, but quite convenient on occasion.

    testNGArtifactName (Default: org.testng:testng)
      Allows you to specify the name of the TestNG artifact. If not set,
      org.testng:testng will be used.

    testSourceDirectory
      The test source directory containing test class sources.
      Required: Yes

    threadCount (Default: null)
      (forkMode=perthread or TestNG/JUnit 4.7 provider) The attribute
      thread-count allows you to specify how many threads should be allocated
      for this execution. Only makes sense to use in conjunction with the
      parallel parameter. (forkMode=perthread does not support/require the
      parallel parameter)

    trimStackTrace (Default: true)
      Whether to trim the stack trace in the reports to just the lines within
      the test, or show the full trace.

    useFile (Default: true)
      Option to generate a file test report or just output the test report to
      the console.

    useManifestOnlyJar (Default: true)
      By default, Surefire forks your tests using a manifest-only JAR; set this
      parameter to 'false' to force it to launch your tests with a plain old
      Java classpath. (See
      http://maven.apache.org/plugins/maven-surefire-plugin/examples/class-loading.html
      for a more detailed explanation of manifest-only JARs and their benefits.)
      Beware, setting this to 'false' may cause your tests to fail on Windows if
      your classpath is too long.

    useSystemClassLoader (Default: true)
      Option to pass dependencies to the system's classloader instead of using
      an isolated class loader when forking. Prevents problems with JDKs which
      implement the service provider lookup mechanism by using the system's
      classloader.

    useUnlimitedThreads (Default: false)
      (JUnit 4.7 provider) Indicates that the thread pool will be unlimited. The
      parallel parameter and the actual number of classes/methods will decide.
      Setting this to 'true' effectively disables perCoreThreadCount and
      threadCount. Defaults to 'false'.

    workingDirectory (Default: null)
      Command line working directory.


[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 0.400 s
[INFO] Finished at: 2016-03-20T14:39:56+02:00
[INFO] Final Memory: 8M/245M
[INFO] ------------------------------------------------------------------------
